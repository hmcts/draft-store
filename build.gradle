plugins {
  id 'application'
  id 'checkstyle'
  id 'io.spring.dependency-management' version '1.0.3.RELEASE'
  id 'org.flywaydb.flyway' version '5.0.7'
  id 'org.springframework.boot' version '1.5.7.RELEASE'
  id 'org.owasp.dependencycheck' version '1.4.5.1'
  id 'com.github.ben-manes.versions' version '0.15.0'
  id 'org.sonarqube' version '2.5'
  id 'jacoco'
  id 'pmd'
}

group 'uk.gov.hmcts.reform'
version '1.1.0'

checkstyle.toolVersion = '7.2'
checkstyle.configFile = new File(rootDir, "checkstyle.xml")

flyway {
  url = System.getenv('FLYWAY_URL')
  user = System.getenv('FLYWAY_USER')
  password = System.getenv('FLYWAY_PASSWORD')
  baselineOnMigrate = true
  baselineVersion = '000'
}

// https://jeremylong.github.io/DependencyCheck/dependency-check-gradle/configuration.html
dependencyCheck {
  // Specifies if the build should be failed if a CVSS score above a specified level is identified.
  // range of 0-10 fails the build, anything greater and it doesn't fail the build
  failBuildOnCVSS = System.getProperty('dependencyCheck.failBuild') == 'true' ? 0 : 11
  suppressionFile = 'dependency-check-suppressions.xml'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
  maven {
    url "https://dl.bintray.com/hmcts/hmcts-maven"
  }
  jcenter()
}

sourceSets {
  integrationTest {
    java {
      compileClasspath += main.output
      runtimeClasspath += main.output
      srcDir file('src/integrationTest/java')
    }
    resources.srcDir file('src/integrationTest/resources')
  }

  smokeTest {
    java {
      compileClasspath += main.output
      runtimeClasspath += main.output
      srcDir file('src/smokeTest/java')
    }
    resources.srcDir file('src/smokeTest/resources')
  }

  functionalTest {
    java {
      compileClasspath += main.output
      runtimeClasspath += main.output
      srcDir file('src/functionalTest/java')
    }
    resources.srcDir file('src/functionalTest/resources')
  }
}

def springBootVersion = '1.5.8.RELEASE'

dependencyManagement {
  imports {
    mavenBom "org.springframework.boot:spring-boot-starter-parent:${springBootVersion}"
  }
}


def versions = [
  springBoot      : springBootVersion,
  jackson         : dependencyManagement.importedProperties['jackson.version'],
  springfoxSwagger: '2.7.0'
]

dependencies {
  compile group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: versions.springBoot
  compile group: 'org.springframework.boot', name: 'spring-boot-starter-actuator', version: versions.springBoot
  compile group: 'org.springframework.boot', name: 'spring-boot-starter-jdbc', version: versions.springBoot
  compile group: 'org.springframework.boot', name: 'spring-boot-starter-validation', version: versions.springBoot

  compile group: 'org.postgresql', name: 'postgresql', version: '42.1.4'

  compile group: 'org.flywaydb', name: 'flyway-core', version: '5.0.7'

  compile group: 'io.springfox', name: 'springfox-swagger2', version: versions.springfoxSwagger
  compile group: 'io.springfox', name: 'springfox-swagger-ui', version: versions.springfoxSwagger

  compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: versions.jackson
  compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: versions.jackson

  compile group: 'org.hibernate', name: 'hibernate-validator', version: '5.4.1.Final'

  compile group: 'uk.gov.hmcts.reform', name: 'java-logging-spring', version: '1.4.0'
  compile group: 'uk.gov.hmcts.reform', name: 'reform-api-standards', version: '0.3.0'

  testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: versions.springBoot

  integrationTestCompile sourceSets.main.runtimeClasspath
  integrationTestCompile(
    'org.springframework.boot:spring-boot-starter-test',
    'com.jayway.restassured:rest-assured:2.9.0',
    'org.mockito:mockito-core:1.10.19',
    'org.assertj:assertj-core:3.6.2',
    'org.testcontainers:postgresql:1.4.3'
  )

  smokeTestCompile sourceSets.main.runtimeClasspath
  smokeTestCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: versions.springBoot
  smokeTestCompile group: 'io.rest-assured', name: 'rest-assured', version: '3.0.7'

  functionalTestCompile sourceSets.main.runtimeClasspath
  functionalTestCompile(
    'org.springframework.boot:spring-boot-starter-test',
    'com.jayway.restassured:rest-assured:2.9.0',
    'com.warrenstrange:googleauth:1.1.2',
    'org.assertj:assertj-core:1.7.0',
    'com.googlecode.lambdaj:lambdaj:2.3.3'
  )
}

task integration(type: Test) {
  description = "Runs Integration Tests"
  testClassesDirs = sourceSets.integrationTest.output.classesDirs
  classpath = sourceSets.integrationTest.runtimeClasspath
}

task smoke(type: Test) {
  description = "Runs Smoke Tests"
  testClassesDirs = sourceSets.smokeTest.output.classesDirs
  classpath = sourceSets.smokeTest.runtimeClasspath
}

task functional(type: Test) {
  description = "Runs Functional Tests"
  testClassesDirs = sourceSets.functionalTest.output.classesDirs
  classpath = sourceSets.functionalTest.runtimeClasspath
}

task migratePostgresDatabase(type: org.flywaydb.gradle.task.FlywayMigrateTask) {
  baselineOnMigrate = true
  if (project.hasProperty("dburl")) {
    url = "jdbc:postgresql://${dburl}"
  }
}

jacocoTestReport {
  executionData(test, integration)
  reports {
    xml.enabled true
    csv.enabled false
    xml.destination file("${project.buildDir}/reports/jacoco/test/jacocoTestReport.xml")
  }
}

project.tasks['sonarqube'].dependsOn test, integration
sonarqube {
  properties {
    property "sonar.projectName", "Reform :: Draft Store"
    property "sonar.jacoco.reportPath", "${project.buildDir}/jacoco/test.exec"
    property "sonar.jacoco.itReportPath", "${project.buildDir}/jacoco/integration.exec"
  }
}

pmd {
  toolVersion = "5.8.1"
  ignoreFailures = true
  sourceSets = [sourceSets.main, sourceSets.test, sourceSets.integrationTest, sourceSets.smokeTest]
  reportsDir = file("$project.buildDir/reports/pmd")
  ruleSetFiles = files("ruleset.xml")
}

jar {
  archiveName 'draft-store.jar'

  manifest {
    attributes 'Implementation-Title': project.name,
      'Implementation-Version': project.version
  }
}

run {
  mainClassName = 'uk.gov.hmcts.reform.draftstore.DraftStoreApplication'
  if (debug == 'true') {
    jvmArgs = ['-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=5005']
  }
}
