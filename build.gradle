plugins {
  id 'application'
  id 'checkstyle'
  id 'io.spring.dependency-management' version '1.0.5.RELEASE'
  id 'org.flywaydb.flyway' version '5.1.4'
  id 'org.springframework.boot' version '1.5.15.RELEASE'
  id 'org.owasp.dependencycheck' version '3.3.1'
  id 'com.github.ben-manes.versions' version '0.17.0'
  id 'org.sonarqube' version '2.6.2'
  id 'jacoco'
  id 'pmd'
}

group 'uk.gov.hmcts.reform'
version '1.1.0'

checkstyle.toolVersion = '8.9'
checkstyle.configFile = new File(rootDir, "checkstyle.xml")

flyway {
  url = System.getenv('FLYWAY_URL')
  user = System.getenv('FLYWAY_USER')
  password = System.getenv('FLYWAY_PASSWORD')
  baselineOnMigrate = true
  baselineVersion = '000'
}

// https://jeremylong.github.io/DependencyCheck/dependency-check-gradle/configuration.html
dependencyCheck {
  // Specifies if the build should be failed if a CVSS score above a specified level is identified.
  // range of 0-10 fails the build, anything greater and it doesn't fail the build
  failBuildOnCVSS = System.getProperty('dependencyCheck.failBuild') == 'true' ? 0 : 11
  suppressionFile = 'dependency-check-suppressions.xml'
}

dependencyUpdates.resolutionStrategy = {
  componentSelection { rules ->
    rules.all { ComponentSelection selection ->
      boolean rejected = ['alpha', 'beta', 'rc', 'cr', 'm'].any { qualifier ->
        selection.candidate.version ==~ /(?i).*[.-]${qualifier}[.\d-]*/
      }
      if (rejected) {
        selection.reject('Release candidate')
      }
    }
  }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
  maven {
    url "https://dl.bintray.com/hmcts/hmcts-maven"
  }
  jcenter()
}

sourceSets {
  integrationTest {
    java {
      compileClasspath += main.output
      runtimeClasspath += main.output
      srcDir file('src/integrationTest/java')
    }
    resources.srcDir file('src/integrationTest/resources')
  }

  smokeTest {
    java {
      compileClasspath += main.output
      runtimeClasspath += main.output
      srcDir file('src/smokeTest/java')
    }
    resources.srcDir file('src/smokeTest/resources')
  }

  functionalTest {
    java {
      compileClasspath += main.output
      runtimeClasspath += main.output
      srcDir file('src/functionalTest/java')
    }
    resources.srcDir file('src/functionalTest/resources')
  }
}

def versions = [
  springBoot      : plugins.getPlugin('org.springframework.boot').class.package.implementationVersion,
  springfoxSwagger: '2.7.0'
]

dependencyManagement {
  dependencies {
    // spring boot dependency management plugin downgrades
    // hystrix related libraries use 2.4.3 and not clear if plan to upgrade
    // bump to 2.9.5 because of https://nvd.nist.gov/vuln/detail/CVE-2018-7489
    dependencySet(group: 'com.fasterxml.jackson.core', version: '2.9.5') {
      entry 'jackson-annotations'
      entry 'jackson-core'
      entry 'jackson-databind'
    }
    dependencySet(group: 'com.fasterxml.jackson.datatype', version: '2.9.7') {
      entry 'jackson-datatype-jsr310'
    }
  }
  imports {
    mavenBom "org.springframework.boot:spring-boot-starter-parent:${versions.springBoot}"
  }
}

dependencies {
  compile group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: versions.springBoot
  compile group: 'org.springframework.boot', name: 'spring-boot-starter-actuator', version: versions.springBoot
  compile group: 'org.springframework.boot', name: 'spring-boot-starter-jdbc', version: versions.springBoot
  compile group: 'org.springframework.boot', name: 'spring-boot-starter-validation', version: versions.springBoot

  compile group: 'org.postgresql', name: 'postgresql', version: '42.2.5'

  compile group: 'org.flywaydb', name: 'flyway-core', version: '5.1.4'

  compile group: 'io.springfox', name: 'springfox-swagger2', version: versions.springfoxSwagger
  compile group: 'io.springfox', name: 'springfox-swagger-ui', version: versions.springfoxSwagger

  compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind'
  compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310'

  compile group: 'uk.gov.hmcts.reform', name: 'java-logging-spring', version: '2.2.1'
  compile group: 'uk.gov.hmcts.reform', name: 'java-logging-appinsights', version: '2.2.1'

  compile group: 'uk.gov.hmcts.reform', name: 'reform-api-standards', version: '0.3.0'

  testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: versions.springBoot

  integrationTestCompile sourceSets.main.runtimeClasspath
  integrationTestCompile(
    'org.springframework.boot:spring-boot-starter-test',
    'com.jayway.restassured:rest-assured:2.9.0',
    'org.mockito:mockito-core:2.23.0',
    'org.assertj:assertj-core:3.11.1',
    'org.testcontainers:postgresql:1.9.1'
  )

  smokeTestCompile sourceSets.main.runtimeClasspath
  smokeTestCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: versions.springBoot
  smokeTestCompile group: 'io.rest-assured', name: 'rest-assured', version: '3.2.0'
  smokeTestCompile group: 'com.warrenstrange', name: 'googleauth', version: '1.2.0'

  functionalTestCompile sourceSets.smokeTest.runtimeClasspath
}

task integration(type: Test) {
  description = "Runs Integration Tests"
  testClassesDirs = sourceSets.integrationTest.output.classesDirs
  classpath = sourceSets.integrationTest.runtimeClasspath
}

task smoke(type: Test) {
  description = "Runs Smoke Tests"
  testClassesDirs = sourceSets.smokeTest.output.classesDirs
  classpath = sourceSets.smokeTest.runtimeClasspath
}

task functional(type: Test) {
  description = "Runs Functional Tests"
  testClassesDirs = sourceSets.functionalTest.output.classesDirs
  classpath = sourceSets.functionalTest.runtimeClasspath
}

task migratePostgresDatabase(type: org.flywaydb.gradle.task.FlywayMigrateTask) {
  baselineOnMigrate = true
  if (project.hasProperty("dburl")) {
    url = "jdbc:postgresql://${dburl}"
  }
}

jacocoTestReport {
  executionData(test, integration)
  reports {
    xml.enabled true
    csv.enabled false
    xml.destination file("${project.buildDir}/reports/jacoco/test/jacocoTestReport.xml")
  }
}

project.tasks['sonarqube'].dependsOn test, integration
sonarqube {
  properties {
    property "sonar.projectName", "Reform :: Draft Store"
    property "sonar.jacoco.reportPath", "${project.buildDir}/jacoco/test.exec"
    property "sonar.jacoco.itReportPath", "${project.buildDir}/jacoco/integration.exec"
  }
}

pmd {
  toolVersion = "5.8.1"
  ignoreFailures = true
  sourceSets = [sourceSets.main, sourceSets.test, sourceSets.integrationTest, sourceSets.smokeTest,
                sourceSets.functionalTest]
  reportsDir = file("$project.buildDir/reports/pmd")
  ruleSetFiles = files("ruleset.xml")
}

jar {
  archiveName 'draft-store.jar'

  manifest {
    attributes 'Implementation-Title': project.name,
      'Implementation-Version': project.version
  }
}

wrapper {
    distributionType = Wrapper.DistributionType.ALL
}

run {
  mainClassName = 'uk.gov.hmcts.reform.draftstore.DraftStoreApplication'
  if (debug == 'true') {
    jvmArgs = ['-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=5005']
  }
}
