#!groovy

@Library("Infrastructure@gatling-builder")

import uk.gov.hmcts.contino.GradleBuilder

def type = "java"
def product = "draft-store"
def app = "service"
def channel = '#rpe-build-notices'

def secrets = [
  'draft-store-${env}':
    [
      secret('s2s-secret-for-tests', 'S2S_SECRET_FOR_TESTS'),
      secret('idam-password-for-tests', 'IDAM_PASSWORD_FOR_TESTS'),
      secret('idam-client-secret-for-tests', 'IDAM_CLIENT_SECRET_FOR_TESTS'),
      // performance test environment
      secret('idam-client-secret-for-tests', 'IDAM_CLIENT_SECRET')
    ],
  's2s-${env}':
    [
      // performance test environment
      secret('microservicekey-draftStoreTests', 'S2S_SECRET'),
    ]
]

static LinkedHashMap<String, Object> secret(String secretName, String envVar) {
  [$class     : 'AzureKeyVaultSecret',
   secretType : 'Secret',
   name       : secretName,
   version    : '',
   envVariable: envVar
  ]
}

GradleBuilder builder = new GradleBuilder(this, product)

withPipeline(type, product, app) {
  after('test') {
    builder.gradle('integration')
  }

  env.USE_IDAM_TESTING_SUPPORT = "true"
  env.S2S_URL_FOR_TESTS = "http://rpe-service-auth-provider-aat.service.core-compute-aat.internal"
  env.IDAM_URL_FOR_TESTS = "https://idam-api.aat.platform.hmcts.net"
  env.S2S_NAME_FOR_TESTS = "draft_store_tests"
  env.IDAM_USER_EMAIL_FOR_TESTS = "reformplatformengineering+tests@gmail.com"
  env.IDAM_CLIENT_ID_FOR_TESTS = "cmc_citizen" // TODO change this
  env.IDAM_REDIRECT_URI_FOR_TESTS = "https://cmc-citizen-frontend-aat-staging.service.core-compute-aat.internal/receiver"

  // performance test environment
  env.DRAFT_STORE_BASE_URL = "http://draft-store-service-aat.service.core-compute-aat.internal/drafts"
  env.S2S_URL = "http://rpe-service-auth-provider-aat.service.core-compute-aat.internal"
  env.S2S_TESTING = "false"
  env.IDAM_URL = "https://idam-api.aat.platform.hmcts.net"
  env.IDAM_REDIRECT_URI = "https://cmc-citizen-frontend-aat-staging.service.core-compute-aat.internal/receiver"
  env.TEST_USERS = "10"
  env.TEST_RAMP_UP_SECS = "20"
  env.TEST_CLEAN_UP_DELAY_SECS = "140"

  enableSlackNotifications(channel)
  enableDbMigration()
  enableDockerBuild()
  installCharts()
  loadVaultSecrets(secrets)

  enablePerformanceTest()
}
