#!groovy

// @Library("Infrastructure@DTSPO-6149_cleanup_vault_secrets_fetch")
@Library("Infrastructure@DTSPO-6149_appInsightsInstrumentationKey_keyvault")

def secrets = [
  'draft-store-${env}':
    [
      secret('s2s-secret-for-tests', 'S2S_SECRET_FOR_TESTS'),
      secret('idam-password-for-tests', 'IDAM_PASSWORD_FOR_TESTS'),
      secret('idam-client-secret-for-tests', 'IDAM_CLIENT_SECRET_FOR_TESTS'),
    ]
]

static LinkedHashMap<String, Object> secret(String secretName, String envVar) {
  [ $class: 'AzureKeyVaultSecret',
    secretType: 'Secret',
    name: secretName,
    version: '',
    envVariable: envVar
  ]
}

properties([
  parameters([
    string(name: 'PRODUCT_NAME', defaultValue: 'draft-store', description: ''),
    string(name: 'APP', defaultValue: 'service', description: ''),
    string(name: 'TYPE', defaultValue: 'java', description: ''),
    string(name: 'ENVIRONMENT', defaultValue: 'sandbox', description: 'Environment where code should be build and deployed'),
    choice(name: 'SUBSCRIPTION', choices: 'sandbox', description: 'Azure subscriptions available to build in')
  ]),
  [$class: 'GithubProjectProperty', projectUrlStr: 'github.com/hmcts/draft-store'],
  pipelineTriggers([[$class: 'GitHubPushTrigger']])
])

withParameterizedPipeline(params.TYPE, params.PRODUCT_NAME, params.APP, params.ENVIRONMENT, params.SUBSCRIPTION) {
  enableDbMigration('draft-store')
  loadVaultSecrets(secrets)
  disableLegacyDeployment()
  enableAksStagingDeployment()
}
